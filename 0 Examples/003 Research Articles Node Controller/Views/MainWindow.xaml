<Window x:Class="Aki32Utilities.UsageExamples.ResearchArticlesNodeController.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:Aki32Utilities.UsageExamples.ResearchArticlesNodeController.ViewModels"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:ctrl="clr-namespace:Aki32Utilities.WPFAppUtilities.NodeController.Controls;assembly=NodeController"
        mc:Ignorable="d"
        Title="Research Articles Node Controll" Height="600" Width="1000">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <Window.Resources>

        <sys:Double x:Key="NodeContentFontSize">24.0</sys:Double>

        <Style x:Key="UserTextBoxStyle" TargetType="TextBox">
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="Background" Value="#CC000000"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <ContextMenu x:Key="NodeGraphContextMenu">
            <MenuItem Header="Add Node" Command="{Binding AddNodeCommand}"/>
            <!--<MenuItem Header="Add GroupNode" Command="{Binding AddGroupNodeCommand}"/>-->
            <MenuItem Header="Remove Nodes" Command="{Binding RemoveNodesCommand}"/>
        </ContextMenu>

        <Style x:Key="NodeInputStyle" TargetType="{x:Type ctrl:NodeInputContent}" BasedOn="{StaticResource {x:Type ctrl:NodeInputContent}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="Content" Value="{Binding Label}"/>
            <Setter Property="IsEnabled" Value="{Binding IsEnable}"/>
            <Setter Property="AllowToConnectMultiple" Value="{Binding AllowToConnectMultiple}"/>
        </Style>

        <Style x:Key="NodeOutputStyle" TargetType="{x:Type ctrl:NodeOutputContent}" BasedOn="{StaticResource {x:Type ctrl:NodeOutputContent}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="Content" Value="{Binding Label}"/>
            <Setter Property="IsEnabled" Value="{Binding IsEnable}"/>
        </Style>

        <Style x:Key="NodeLinkStyle" TargetType="{x:Type ctrl:NodeLink}" BasedOn="{StaticResource {x:Type ctrl:NodeLink}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="OutputConnectorGuid" Value="{Binding OutputConnectorGuid, Mode=OneWay}"/>
            <Setter Property="InputConnectorGuid" Value="{Binding InputConnectorGuid, Mode=OneWay}"/>
            <Setter Property="IsLocked" Value="{Binding IsLocked, Mode=OneWay}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <!--dont need to specify Mode=TwoWay because link is set default two way property.-->
        </Style>

        <Style x:Key="DefaultNodeStyle" TargetType="{x:Type ctrl:DefaultNode}" BasedOn="{StaticResource {x:Type ctrl:DefaultNode}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <!--disconnect position binding if you specify Mode=OneWay, because it will change binding position instance in view control.-->
            <Setter Property="Position" Value="{Binding Position}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <Setter Property="Inputs" Value="{Binding Inputs}"/>
            <Setter Property="InputLayout" Value="Center"/>
            <Setter Property="Outputs" Value="{Binding Outputs}"/>
            <Setter Property="OutputLayout" Value="Center"/>
            <Setter Property="InputMargin" Value="10"/>
            <Setter Property="OutputMargin" Value="10"/>
            <Setter Property="InputStyle" Value="{StaticResource NodeInputStyle}"/>
            <Setter Property="OutputStyle" Value="{StaticResource NodeOutputStyle}"/>
            <Setter Property="SizeChangedCommand" Value="{Binding SizeChangedCommand}"/>
            <Setter Property="HeaderContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Background="#FF666666">
                            <Grid>
                                <StackPanel HorizontalAlignment="Center">
                                    <Label Content="{Binding Name}"/>
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Left">
                                    <Label Content="★"/>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>

                        <!-- グリッド内に表示する情報 -->
                        <StackPanel
                            Orientation="Vertical"
                            Width="344"
                            Margin="3"
                            TextBlock.Foreground="White"
                            >

                            <Grid Margin="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock 
                                    Grid.Column="0"
                                    Text="著者:" 
                                    HorizontalAlignment="Right"
                                    Margin="0,10,0,0"
                                    />
                                <TextBlock 
                                    Grid.Column="2"
                                    Text="{Binding TopAuthor,Mode=OneWay}"
                                    FontSize="{StaticResource NodeContentFontSize}"
                                    />

                            </Grid>

                            <Grid Margin="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock 
                                    Grid.Column="0"
                                    Text="リリース:" 
                                    HorizontalAlignment="Right"
                                    Margin="0,10,0,0"
                                    />
                                <TextBox 
                                    Grid.Column="2"
                                    Style="{StaticResource UserTextBoxStyle}"
                                    Text="{Binding PublishedOn}"
                                    FontSize="{StaticResource NodeContentFontSize}"
                                    />

                            </Grid>

                            <Grid Margin="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock 
                                    Grid.Column="0" 
                                    Text="タイトル:" 
                                    HorizontalAlignment="Right"
                                    />
                                <TextBox
                                    Grid.Column="2" 
                                    Style="{StaticResource UserTextBoxStyle}"
                                    Text="{Binding ArticleTitle}" 
                                    />

                            </Grid>

                            <Grid Margin="4"/>

                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GroupNodeStyle" TargetType="{x:Type ctrl:GroupNode}" BasedOn="{StaticResource {x:Type ctrl:GroupNode}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <!--disconnect position binding if you specify Mode=OneWay, because it will change binding position instance in view control.-->
            <Setter Property="Position" Value="{Binding Position}"/>
            <Setter Property="InnerPosition" Value="{Binding InnerPosition}"/>
            <Setter Property="InterlockPosition" Value="{Binding InterlockPosition}"/>
            <Setter Property="InnerWidth" Value="{Binding InnerWidth}"/>
            <Setter Property="InnerHeight" Value="{Binding InnerHeight}"/>
            <Setter Property="Comment" Value="{Binding Comment}"/>
            <Setter Property="CommentSize" Value="24"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <Setter Property="SizeChangedCommand" Value="{Binding SizeChangedCommand}"/>
            <Setter Property="HeaderContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Background="#FF666666">
                            <StackPanel HorizontalAlignment="Center">
                                <Label Content="{Binding Name}"/>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="600"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="0">

            <ScrollViewer 
                HorizontalScrollBarVisibility="Auto" 
                VerticalScrollBarVisibility="Disabled"
                >

                <StackPanel
                    Orientation="Horizontal">

                    <Button Margin="4" Height="24" Content="保存" Command="{Binding SaveCommand}"/>
                    <Button Margin="4" Height="24" Content="整列" Command="{Binding RearrangeNodesAlignLeftCommand}"/>

                    <!-- コピペ用に残す。 -->
                    <ComboBox Margin="4" Height="24" ItemsSource="{Binding GroupIntersectTypes, Mode=OneTime}" SelectedItem="{Binding SelectedGroupIntersectType}" ToolTip="group intersection type."/>
                    <ComboBox Margin="4" Height="24" ItemsSource="{Binding RangeSelectionModes, Mode=OneTime}" SelectedItem="{Binding SelectedRangeSelectionMode}" ToolTip="range selection mode."/>
                    <CheckBox Margin="4" Height="24" Content="IsLockedAllNodeLinks" IsChecked="{Binding IsLockedAllNodeLinks}" VerticalContentAlignment="Center"/>
                    <CheckBox Margin="4" Height="24" Content="IsEnableAllNodeConnectors" IsChecked="{Binding IsEnableAllNodeConnectors}" VerticalContentAlignment="Center"/>

                </StackPanel>

            </ScrollViewer>

        </Grid>

        <Grid Grid.Row="1" Grid.Column="0">

            <ctrl:NodeGraph
                Grid.Row="1"
                x:Name="NodeGraph"
                MoveWithMouse="Right"
                Scale="{Binding Scale}"
                ItemsSource="{Binding NodeViewModels}"
                ItemContainerStyle="{StaticResource DefaultNodeStyle}"
                NodeLinks="{Binding NodeLinkViewModels}"
                NodeLinkStyle="{StaticResource NodeLinkStyle}"
                GroupNodes="{Binding GroupNodeViewModels}"
                GroupNodeStyle="{StaticResource GroupNodeStyle}"
                PreviewConnectLinkCommand="{Binding PreviewConnectLinkCommand}"
                ConnectedLinkCommand="{Binding ConnectedLinkCommand}"
                DisconnectedLinkCommand="{Binding DisconnectedLinkCommand}"
                AllowToOverrideConnection="False"
                ClipToBounds="True"
                ContextMenu="{StaticResource NodeGraphContextMenu}">

                <ctrl:NodeGraph.Style>
                    <Style TargetType="{x:Type ctrl:NodeGraph}" BasedOn="{StaticResource {x:Type ctrl:NodeGraph}}">
                        <Style.Triggers>
                            <!--Group intersect -->
                            <DataTrigger Binding="{Binding SelectedGroupIntersectType}" Value="{x:Static vm:GroupIntersectType.CursorPointVMDefine}">
                                <Setter Property="GroupIntersectType" Value="{x:Static ctrl:GroupIntersectType.CursorPoint}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SelectedGroupIntersectType}" Value="{x:Static vm:GroupIntersectType.BoundingBoxVMDefine}">
                                <Setter Property="GroupIntersectType" Value="{x:Static ctrl:GroupIntersectType.BoundingBox}"/>
                            </DataTrigger>

                            <!--Range selection mode-->
                            <DataTrigger Binding="{Binding SelectedRangeSelectionMode}" Value="{x:Static vm:RangeSelectionMode.ContainVMDefine}">
                                <Setter Property="RangeSelectionMdoe" Value="{x:Static ctrl:RangeSelectionMode.Contain}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SelectedRangeSelectionMode}" Value="{x:Static vm:RangeSelectionMode.IntersectVMDefine}">
                                <Setter Property="RangeSelectionMdoe" Value="{x:Static ctrl:RangeSelectionMode.Intersect}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ctrl:NodeGraph.Style>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding SelectedItems, ElementName=NodeGraph}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ctrl:NodeGraph>

        </Grid>

        <Grid Grid.Row="0" Grid.Column="1" Grid.RowSpan="2">

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer
                HorizontalScrollBarVisibility="Disabled">

                <StackPanel Margin="4">

                    <Grid Height="30"/>

                    <Grid Margin="4">
                        <TextBlock
                        Text="著者：" 
                        Width="50" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                        <TextBox 
                        Margin="50,0,0,0" 
                        Text="{Binding SelectingNodeViewModel.Authors}" 
                        TextWrapping="Wrap" AcceptsReturn="False"
                        />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                        Text="タイトル：" 
                        Width="50" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                        <TextBox 
                        Margin="50,0,0,0" 
                        Text="{Binding SelectingNodeViewModel.ArticleTitle}" 
                        TextWrapping="Wrap" AcceptsReturn="False"
                        />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                        Text="リリース：" 
                        Width="50" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                        <TextBox 
                        Margin="50,0,0,0" 
                        Text="{Binding SelectingNodeViewModel.PublishedOn}" 
                        TextWrapping="NoWrap" AcceptsReturn="False"
                        />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                        Text="メモ：" 
                        Width="50" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                        <TextBox 
                        Margin="50,0,0,0" 
                        Text="{Binding SelectingNodeViewModel.Memo}" 
                        TextWrapping="Wrap" AcceptsReturn="True"
                        />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                        Text="研究の出発点：" 
                        ToolTip="
                        【Motivation: 研究の出発点】
 - どんな課題や問題点を解決しようとしたのか？
 - 既存の研究で足りないところはどこだったのか？"
                        Width="100" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                        <TextBox 
                        Margin="100,0,0,0" 
                        Text="{Binding SelectingNodeViewModel.Memo_Motivation}" 
                        TextWrapping="Wrap" AcceptsReturn="True"
                        />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                        Text="研究手法：" 
                        ToolTip="【Method: 研究手法】
 - どんなシステムを作ったか？なぜそのシステム設計でよいと仮定したか？
 - どんなアルゴリズムを作ったか？なぜそのアルゴリズム設計でよいと仮定したか？
 - どんな調査をしたか？なぜその調査計画でよいと仮定したか？
 - どんな実験をしたか？なぜその実験設計でよいと仮定したか？"
                        Width="100" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                        <TextBox 
                        Margin="100,0,0,0" 
                        Text="{Binding SelectingNodeViewModel.Memo_Method}" 
                        TextWrapping="Wrap" AcceptsReturn="True"
                        />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                        Text="結果と知見：" 
                        ToolTip="【Insights: 結果と知見】
 - どんな結果が得られたのか？どんな条件だと上手くいって，どんな場合は上手くいかなかったのか？
 - 新しくわかった知見はなにか？他のアプリケーションやシステムでも使えそうな知見は何か？"
                        Width="100" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                        <TextBox 
                        Margin="100,0,0,0" 
                        Text="{Binding SelectingNodeViewModel.Memo_Insights}" 
                        TextWrapping="Wrap" AcceptsReturn="True"
                        />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                        Text="貢献を一行で：" 
                        ToolTip="【Contribution Summary: 貢献を一行で】
 - 「【Author】は，【Motivation】という課題解決のために【Method】を行い，【Insight】がわかった。」"
                        Width="100" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                        <TextBox 
                        Margin="100,0,0,0" 
                        Text="{Binding SelectingNodeViewModel.Memo_Contribution}" 
                        TextWrapping="Wrap" AcceptsReturn="True"
                        />
                    </Grid>

                    <Grid Height="50"/>

                    <Grid Margin="4">
                        <TextBlock
                        Text="DOI：" 
                        Width="50" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                        <TextBox 
                        Margin="50,0,0,0" 
                        Text="{Binding SelectingNodeViewModel.DOI}" 
                        TextWrapping="NoWrap" AcceptsReturn="False"
                        />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                        Text="オンラインで情報を取得：" 
                        ToolTip="aaa"
                        Width="200" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                        Text="PDFをダウンロード・表示：" 
                        ToolTip="aaa"
                        Width="200" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                    </Grid>


                </StackPanel>

            </ScrollViewer>

            <StackPanel Grid.Row="1" Margin="4">

                <Grid Margin="4">
                    <TextBlock
                        Text="ℹ️ 通知：" 
                        Width="50" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                    <TextBlock
                        Margin="50,0,0,0" 
                        Text="{Binding InfoMessage}" 
                        TextWrapping="NoWrap"
                        />
                </Grid>

            </StackPanel>

        </Grid>

    </Grid>
</Window>
