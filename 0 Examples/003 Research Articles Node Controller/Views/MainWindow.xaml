<Window x:Class="Aki32Utilities.UsageExamples.ResearchArticlesNodeController.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:Aki32Utilities.UsageExamples.ResearchArticlesNodeController.ViewModels"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:ctrl="clr-namespace:Aki32Utilities.WPFAppUtilities.NodeController.Controls;assembly=NodeController"
        mc:Ignorable="d"
        Title="Research Articles Node Controll" 
        d:Height="600"
        d:Width="1200"
        >

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <Window.Resources>

        <sys:Double x:Key="NodeContentFontSize">24.0</sys:Double>

        <Brush x:Key="IsFavoriteColor">#E95B6B</Brush>
        <Brush x:Key="IsReadColor">LightGreen</Brush>
        <Brush x:Key="IsLocalSearchMatchedColor">Aqua</Brush>
        <Brush x:Key="IsTempColor">DarkOrange</Brush>
        <Brush x:Key="IsCat1Color">white</Brush>
        <Brush x:Key="IsCat2Color">HotPink</Brush>
        <Brush x:Key="IsCat3Color">Purple</Brush>

        <Brush x:Key="temp1">Pink</Brush>
        <Brush x:Key="temp2">DeepPink</Brush>
        <Brush x:Key="temp3">MediumPurple</Brush>
        <Brush x:Key="temp4">Purple</Brush>

        <Style x:Key="ToggleButtonTextStyle" TargetType="ToggleButton">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border CornerRadius="11" Padding="6,3,6,3" Background="{TemplateBinding Background}">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="LightBlue" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonTextStyle" TargetType="Button">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="11" Padding="6,3,6,3" Background="{TemplateBinding Background}">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="UserTextBoxStyle" TargetType="TextBox">
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="Background" Value="#CC000000"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <ContextMenu x:Key="NodeGraphContextMenu">
            <MenuItem Header="Add Node" Command="{Binding AddNodeCommand}"/>
            <!--<MenuItem Header="Add GroupNode" Command="{Binding AddGroupNodeCommand}"/>-->
            <MenuItem Header="Remove Nodes" Command="{Binding RemoveNodesCommand}"/>
        </ContextMenu>

        <Style x:Key="NodeInputStyle" TargetType="{x:Type ctrl:NodeInputContent}" BasedOn="{StaticResource {x:Type ctrl:NodeInputContent}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="Content" Value="{Binding Label}"/>
            <Setter Property="IsEnabled" Value="{Binding IsEnable}"/>
            <Setter Property="AllowToConnectMultiple" Value="{Binding AllowToConnectMultiple}"/>
        </Style>

        <Style x:Key="NodeOutputStyle" TargetType="{x:Type ctrl:NodeOutputContent}" BasedOn="{StaticResource {x:Type ctrl:NodeOutputContent}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="Content" Value="{Binding Label}"/>
            <Setter Property="IsEnabled" Value="{Binding IsEnable}"/>
        </Style>

        <Style x:Key="NodeLinkStyle" TargetType="{x:Type ctrl:NodeLink}" BasedOn="{StaticResource {x:Type ctrl:NodeLink}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="OutputConnectorGuid" Value="{Binding OutputConnectorGuid, Mode=OneWay}"/>
            <Setter Property="InputConnectorGuid" Value="{Binding InputConnectorGuid, Mode=OneWay}"/>
            <Setter Property="IsLocked" Value="{Binding IsLocked, Mode=OneWay}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <!--dont need to specify Mode=TwoWay because link is set default two way property.-->
        </Style>

        <Style x:Key="DefaultNodeStyle" TargetType="{x:Type ctrl:DefaultNode}" BasedOn="{StaticResource {x:Type ctrl:DefaultNode}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <!--disconnect position binding if you specify Mode=OneWay, because it will change binding position instance in view control.-->
            <Setter Property="Position" Value="{Binding Position}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <Setter Property="Inputs" Value="{Binding Inputs}"/>
            <Setter Property="InputLayout" Value="Center"/>
            <Setter Property="Outputs" Value="{Binding Outputs}"/>
            <Setter Property="OutputLayout" Value="Center"/>
            <Setter Property="InputMargin" Value="10"/>
            <Setter Property="OutputMargin" Value="10"/>
            <Setter Property="InputStyle" Value="{StaticResource NodeInputStyle}"/>
            <Setter Property="OutputStyle" Value="{StaticResource NodeOutputStyle}"/>
            <Setter Property="SizeChangedCommand" Value="{Binding SizeChangedCommand}"/>
            <Setter Property="HeaderContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Background="{Binding ArticleHeaderColor}">
                            <Grid>
                                <StackPanel HorizontalAlignment="Center">
                                    <!--<Label Content="{Binding Name}"/>-->
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Left">
                                    <!--<Label Content="■"/>-->
                                </StackPanel>
                                <StackPanel
                                    HorizontalAlignment="Right"
                                    Orientation="Horizontal"
                                    Margin="5,0,2,0"
                                    >
                                    <Label Margin="0,0,3,0" Padding="0" Content="●" FontSize="20" Foreground="Transparent" Visibility="Visible"/>
                                    <Label Margin="0,0,3,0" Padding="0" Content="●" FontSize="20" Foreground="{StaticResource IsFavoriteColor}" Visibility="{Binding IsFavorite, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <Label Margin="0,0,3,0" Padding="0" Content="●" FontSize="20" Foreground="{StaticResource IsReadColor}" Visibility="{Binding IsRead, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <Label Margin="0,0,3,0" Padding="0" Content="●" FontSize="20" Foreground="{StaticResource IsTempColor}" Visibility="{Binding IsTemp, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <Label Margin="0,0,3,0" Padding="0" Content="●" FontSize="20" Foreground="{StaticResource IsLocalSearchMatchedColor}" Visibility="{Binding IsLocalSearchMatched, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <Label Margin="0,0,3,0" Padding="0" Content="●" FontSize="20" Foreground="{StaticResource IsCat1Color}" Visibility="{Binding IsCategory1, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <Label Margin="0,0,3,0" Padding="0" Content="●" FontSize="20" Foreground="{StaticResource IsCat2Color}" Visibility="{Binding IsCategory2, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <Label Margin="0,0,3,0" Padding="0" Content="●" FontSize="20" Foreground="{StaticResource IsCat3Color}" Visibility="{Binding IsCategory3, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>

                        <!-- グリッド内に表示する情報 -->
                        <StackPanel
                            Orientation="Vertical"
                            Width="344"
                            Margin="3"
                            TextBlock.Foreground="White"
                            >

                            <Grid Margin="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock 
                                    Grid.Column="0"
                                    Text="著者:" 
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    />
                                <TextBlock 
                                    Grid.Column="2"
                                    Text="{Binding TopAuthor,Mode=OneWay}"
                                    FontSize="{StaticResource NodeContentFontSize}"
                                    VerticalAlignment="Center"
                                    />

                            </Grid>

                            <Grid Margin="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock 
                                    Grid.Column="0"
                                    Text="リリース:" 
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    />
                                <TextBlock 
                                    Grid.Column="2"
                                    Text="{Binding PublishedOn}"
                                    FontSize="{StaticResource NodeContentFontSize}"
                                    VerticalAlignment="Center"
                                    />

                            </Grid>

                            <Grid Margin="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock 
                                    Grid.Column="0" 
                                    Text="タイトル:" 
                                    HorizontalAlignment="Right"
                                    />
                                <TextBlock
                                    Grid.Column="2" 
                                    Text="{Binding ArticleTitle}"
                                    TextWrapping="Wrap"
                                    />

                            </Grid>

                            <Grid Margin="4"/>

                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GroupNodeStyle" TargetType="{x:Type ctrl:GroupNode}" BasedOn="{StaticResource {x:Type ctrl:GroupNode}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <!--disconnect position binding if you specify Mode=OneWay, because it will change binding position instance in view control.-->
            <Setter Property="Position" Value="{Binding Position}"/>
            <Setter Property="InnerPosition" Value="{Binding InnerPosition}"/>
            <Setter Property="InterlockPosition" Value="{Binding InterlockPosition}"/>
            <Setter Property="InnerWidth" Value="{Binding InnerWidth}"/>
            <Setter Property="InnerHeight" Value="{Binding InnerHeight}"/>
            <Setter Property="Comment" Value="{Binding Comment}"/>
            <Setter Property="CommentSize" Value="24"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <Setter Property="SizeChangedCommand" Value="{Binding SizeChangedCommand}"/>
            <Setter Property="HeaderContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Background="#FF666666">
                            <StackPanel HorizontalAlignment="Center">
                                <Label Content="{Binding Name}"/>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="600"/>
        </Grid.ColumnDefinitions>

        <Grid 
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Height="35" 
            >

            <ScrollViewer 
                HorizontalScrollBarVisibility="Auto" 
                VerticalScrollBarVisibility="Disabled"
                >

                <StackPanel
                    Orientation="Horizontal"
                    Margin="4,0,0,0"
                    >

                    <Button
                        Margin="0,4,4,4"
                        Content=" 保存 "
                        Command="{Binding SaveCommand}"
                        Style="{StaticResource ButtonTextStyle}"
                        />

                    <Button 
                        Margin="0,4,4,4"
                        Content=" 整列 "
                        Command="{Binding RearrangeNodesAlignLeftCommand}"
                        Style="{StaticResource ButtonTextStyle}"
                        />

                    <ComboBox
                        Margin="0,4,4,4"
                        Height="24" 
                        ItemsSource="{Binding RangeSelectionModes, Mode=OneTime}" 
                        SelectedItem="{Binding SelectedRangeSelectionMode}" 
                        ToolTip="範囲選択モード"
                        />

                    <TextBlock VerticalAlignment="Center" Text="|" Margin="7,0,3,5" FontSize="25" FontWeight="Thin" Foreground="Gray"/>

                    <CheckBox
                        Margin="0,4,4,4"
                        Height="24"
                        Content="ノード接続保護"
                        IsChecked="{Binding IsLockedAllNodeLinks}" 
                        VerticalContentAlignment="Center" 
                        ToolTip="ノード接続を削除できない状態にします。"
                        />

                    <TextBlock VerticalAlignment="Center" Text="|" Margin="7,0,3,5" FontSize="25" FontWeight="Thin" Foreground="Gray"/>

                    <TextBlock
                        VerticalAlignment="Center" 
                        Text="検索：" 
                        />

                    <TextBox
                        VerticalAlignment="Center" 
                        Margin="0,4,4,4"
                        Text="{Binding LocalSearchString, UpdateSourceTrigger=PropertyChanged}"
                        Width="150"
                        />

                    <TextBlock VerticalAlignment="Center" Text="|" Margin="7,0,3,5" FontSize="25" FontWeight="Thin" Foreground="Gray"/>

                    <TextBlock
                        VerticalAlignment="Center" 
                        Text="強調：" 
                        />

                    <ComboBox
                        Margin="0,4,4,4"
                        Height="24" 
                        ItemsSource="{Binding EmphasizePropertyItems, Mode=OneTime}" 
                        SelectedItem="{Binding SelectedEmphasizePropertyItem}" 
                        ToolTip="強調表示対象"
                        />

                    <TextBlock VerticalAlignment="Center" Text="|" Margin="7,0,3,5" FontSize="25" FontWeight="Thin" Foreground="Gray"/>

                </StackPanel>

            </ScrollViewer>

        </Grid>

        <Grid
            Grid.Row="1" 
            Grid.Column="0"
            >

            <ctrl:NodeGraph
                Grid.Row="1"
                x:Name="NodeGraph"
                MoveWithMouse="Right"
                Scale="{Binding Scale}"
                ItemsSource="{Binding NodeViewModels}"
                ItemContainerStyle="{StaticResource DefaultNodeStyle}"
                NodeLinks="{Binding NodeLinkViewModels}"
                NodeLinkStyle="{StaticResource NodeLinkStyle}"
                GroupNodes="{Binding GroupNodeViewModels}"
                GroupNodeStyle="{StaticResource GroupNodeStyle}"
                PreviewConnectLinkCommand="{Binding PreviewConnectLinkCommand}"
                ConnectedLinkCommand="{Binding ConnectedLinkCommand}"
                DisconnectedLinkCommand="{Binding DisconnectedLinkCommand}"
                AllowToOverrideConnection="False"
                ClipToBounds="True"
                ContextMenu="{StaticResource NodeGraphContextMenu}">

                <ctrl:NodeGraph.Style>
                    <Style TargetType="{x:Type ctrl:NodeGraph}" BasedOn="{StaticResource {x:Type ctrl:NodeGraph}}">
                        <Style.Triggers>
                            <!--Group intersect -->
                            <DataTrigger Binding="{Binding SelectedGroupIntersectType}" Value="{x:Static vm:GroupIntersectType.CursorPointVMDefine}">
                                <Setter Property="GroupIntersectType" Value="{x:Static ctrl:GroupIntersectType.CursorPoint}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SelectedGroupIntersectType}" Value="{x:Static vm:GroupIntersectType.BoundingBoxVMDefine}">
                                <Setter Property="GroupIntersectType" Value="{x:Static ctrl:GroupIntersectType.BoundingBox}"/>
                            </DataTrigger>

                            <!--Range selection mode-->
                            <DataTrigger Binding="{Binding SelectedRangeSelectionMode}" Value="{x:Static vm:RangeSelectionMode.包含選択}">
                                <Setter Property="RangeSelectionMode" Value="{x:Static ctrl:RangeSelectionMode.Contain}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SelectedRangeSelectionMode}" Value="{x:Static vm:RangeSelectionMode.接触選択}">
                                <Setter Property="RangeSelectionMode" Value="{x:Static ctrl:RangeSelectionMode.Intersect}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ctrl:NodeGraph.Style>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding SelectedItems, ElementName=NodeGraph}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ctrl:NodeGraph>

        </Grid>

        <Grid 
            Grid.Row="1" 
            Grid.Column="1"
            >

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer
                HorizontalScrollBarVisibility="Disabled">

                <StackPanel Margin="4">

                    <Grid Margin="4">
                        <StackPanel 
                            Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            >
                            <ToggleButton
                                Margin="3"
                                Style="{StaticResource ToggleButtonTextStyle}"
                                IsChecked="{Binding SelectingNodeViewModel.IsFavorite}"
                                ToolTip=""
                                >
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="♥" Foreground="{StaticResource IsFavoriteColor}"/>
                                    <TextBlock Text="お気に入り"/>
                                </StackPanel>
                            </ToggleButton>

                            <ToggleButton
                                Margin="3"
                                Style="{StaticResource ToggleButtonTextStyle}"
                                IsChecked="{Binding SelectingNodeViewModel.IsRead}"
                                ToolTip=""
                                >
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="●" Foreground="{StaticResource IsReadColor}" Margin="0,0,2,0"/>
                                    <TextBlock Text="既読"/>
                                </StackPanel>
                            </ToggleButton>

                            <ToggleButton
                                Margin="3"
                                Style="{StaticResource ToggleButtonTextStyle}"
                                IsChecked="{Binding SelectingNodeViewModel.IsTemp}"
                                ToolTip=""
                                >
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="●" Foreground="{StaticResource IsTempColor}" Margin="0,0,2,0"/>
                                    <TextBlock Text="一時ﾃﾞｰﾀ"/>
                                </StackPanel>
                            </ToggleButton>

                            <ToggleButton
                                Margin="3"
                                Style="{StaticResource ToggleButtonTextStyle}"
                                IsChecked="{Binding SelectingNodeViewModel.IsLocalSearchMatched, Mode=OneWay}"
                                IsHitTestVisible="False"
                                ToolTip=""
                                IsEnabled="False"
                                >
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="●" Foreground="{StaticResource IsLocalSearchMatchedColor}" Margin="0,0,2,0"/>
                                    <TextBlock Text="検索に一致"/>
                                </StackPanel>
                            </ToggleButton>

                            <ToggleButton
                                Margin="3"
                                Style="{StaticResource ToggleButtonTextStyle}"
                                IsChecked="{Binding SelectingNodeViewModel.IsCategory1}"
                                ToolTip=""
                                >
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="📒" Foreground="{StaticResource IsCat1Color}" Margin="0,0,2,0"/>
                                    <TextBlock Text="ﾒﾓ1"/>
                                </StackPanel>
                            </ToggleButton>

                            <ToggleButton
                                Margin="3"
                                Style="{StaticResource ToggleButtonTextStyle}"
                                IsChecked="{Binding SelectingNodeViewModel.IsCategory2}"
                                ToolTip=""
                                >
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="📒" Foreground="{StaticResource IsCat2Color}" Margin="0,0,2,0"/>
                                    <TextBlock Text="ﾒﾓ2"/>
                                </StackPanel>
                            </ToggleButton>

                            <ToggleButton
                                Margin="3"
                                Style="{StaticResource ToggleButtonTextStyle}"
                                IsChecked="{Binding SelectingNodeViewModel.IsCategory3}"
                                ToolTip=""
                                >
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="📒" Foreground="{StaticResource IsCat3Color}" Margin="0,0,2,0"/>
                                    <TextBlock Text="ﾒﾓ3"/>
                                </StackPanel>
                            </ToggleButton>

                        </StackPanel>
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                            Text="著者：" 
                            Width="50" 
                            HorizontalAlignment="Left"
                            TextAlignment="Right"
                            ToolTipService.InitialShowDelay="10" 
                            >
                            <TextBlock.ToolTip>
                                <TextBlock
                                    TextAlignment="Left"
                                    Text="authors"
                                    >
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBox 
                            Margin="50,0,0,0" 
                            Text="{Binding SelectingNodeViewModel.Authors, UpdateSourceTrigger=LostFocus}" 
                            TextWrapping="Wrap" AcceptsReturn="False"
                            />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                            Text="タイトル：" 
                            Width="50" 
                            HorizontalAlignment="Left"
                            TextAlignment="Right"
                            ToolTipService.InitialShowDelay="10" 
                            >
                            <TextBlock.ToolTip>
                                <TextBlock
                                    TextAlignment="Left"
                                    Text="title"
                                    >
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBox 
                            Margin="50,0,0,0" 
                            Text="{Binding SelectingNodeViewModel.ArticleTitle, UpdateSourceTrigger=PropertyChanged}" 
                            TextWrapping="Wrap" AcceptsReturn="False"
                            />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                            Text="リリース：" 
                            Width="50" 
                            HorizontalAlignment="Left"
                            TextAlignment="Right"
                            ToolTipService.InitialShowDelay="10" 
                            >
                            <TextBlock.ToolTip>
                                <TextBlock
                                    TextAlignment="Left"
                                    Text="release"
                                    >
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBox 
                            Margin="50,0,0,0" 
                            Text="{Binding SelectingNodeViewModel.PublishedOn, UpdateSourceTrigger=PropertyChanged}" 
                            TextWrapping="NoWrap" AcceptsReturn="False"
                            />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                            Text="メモ：" 
                            Width="50" 
                            HorizontalAlignment="Left"
                            TextAlignment="Right"
                            ToolTipService.InitialShowDelay="10" 
                            >
                            <TextBlock.ToolTip>
                                <TextBlock
                                    TextAlignment="Left"
                                    Text="memo"
                                    >
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBox 
                            Margin="50,0,0,0" 
                            Text="{Binding SelectingNodeViewModel.Memo}" 
                            TextWrapping="Wrap" AcceptsReturn="True"
                            />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                            Text="研究の出発点：" 
                            Width="100" 
                            HorizontalAlignment="Left"
                            TextAlignment="Right"
                            ToolTipService.InitialShowDelay="10" 
                            >
                            <TextBlock.ToolTip>
                                <TextBlock
                                    TextAlignment="Left"
                                    Text="【Motivation: 研究の出発点】
&#10; - どんな課題や問題点を解決しようとしたのか？
&#10; - 既存の研究で足りないところはどこだったのか？">
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBox 
                            Margin="100,0,0,0" 
                            Text="{Binding SelectingNodeViewModel.Memo_Motivation}" 
                            TextWrapping="Wrap" AcceptsReturn="True"
                            />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                            Text="研究手法：" 
                            Width="100" 
                            HorizontalAlignment="Left"
                            TextAlignment="Right"
                            ToolTipService.InitialShowDelay="10" 
                            >
                            <TextBlock.ToolTip>
                                <TextBlock
                                    TextAlignment="Left"
                                    Text="【Method: 研究手法】
&#10; - どんなシステムを作ったか？なぜそのシステム設計でよいと仮定したか？
&#10; - どんなアルゴリズムを作ったか？なぜそのアルゴリズム設計でよいと仮定したか？
&#10; - どんな調査をしたか？なぜその調査計画でよいと仮定したか？
&#10; - どんな実験をしたか？なぜその実験設計でよいと仮定したか？">
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBox 
                            Margin="100,0,0,0" 
                            Text="{Binding SelectingNodeViewModel.Memo_Method}" 
                            TextWrapping="Wrap" AcceptsReturn="True"
                            />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                            Text="結果と知見：" 
                            Width="100" 
                            HorizontalAlignment="Left"
                            TextAlignment="Right"
                            ToolTipService.InitialShowDelay="10" 
                            >
                            <TextBlock.ToolTip>
                                <TextBlock
                                    TextAlignment="Left"
                                    Text="【Insights: 結果と知見】
&#10; - どんな結果が得られたのか？どんな条件だと上手くいって，どんな場合は上手くいかなかったのか？
&#10; - 新しくわかった知見はなにか？他のアプリケーションやシステムでも使えそうな知見は何か？">
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBox 
                            Margin="100,0,0,0" 
                            Text="{Binding SelectingNodeViewModel.Memo_Insights}" 
                            TextWrapping="Wrap" AcceptsReturn="True"
                            />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                            Text="貢献を一行で：" 
                            Width="100" 
                            HorizontalAlignment="Left"
                            TextAlignment="Right"
                            ToolTipService.InitialShowDelay="10" 
                            >
                            <TextBlock.ToolTip>
                                <TextBlock
                                    TextAlignment="Left"
                                    Text="【Contribution Summary: 貢献を一行で】
&#10; - 「【Author】は，【Motivation】という課題解決のために【Method】を行い，【Insight】がわかった。」">
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBox 
                            Margin="100,0,0,0" 
                            Text="{Binding SelectingNodeViewModel.Memo_Contribution}" 
                            TextWrapping="Wrap" AcceptsReturn="True"
                            />
                    </Grid>


                    <!-- ========================================== -->
                    <Grid Height="50"/>

                    <Grid Margin="4">
                        <TextBlock
                            Text="タグ：" 
                            Width="50" 
                            HorizontalAlignment="Left"
                            TextAlignment="Right"
                            ToolTipService.InitialShowDelay="10" 
                            >
                            <TextBlock.ToolTip>
                                <TextBlock
                                    TextAlignment="Left"
                                    Text="tags"
                                    >
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock 
                            Text="{Binding SelectingNodeViewModel.Tags}" 
                            Margin="50,0,0,0" 
                            TextWrapping="Wrap"
                            />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                            Text="DOI：" 
                            Width="50" 
                            HorizontalAlignment="Left"
                            TextAlignment="Right"
                            ToolTipService.InitialShowDelay="10" 
                            >
                            <TextBlock.ToolTip>
                                <TextBlock
                                    TextAlignment="Left"
                                    Text="doi"
                                    >
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBox 
                            Margin="50,0,0,0" 
                            Text="{Binding SelectingNodeViewModel.DOI, UpdateSourceTrigger=PropertyChanged}" 
                            TextWrapping="NoWrap" AcceptsReturn="False"
                            />
                    </Grid>

                    <Grid Margin="4">
                        <TextBlock
                            Text="文献：" 
                            Width="50" 
                            HorizontalAlignment="Left"
                            TextAlignment="Right"
                            ToolTipService.InitialShowDelay="10" 
                            >
                            <TextBlock.ToolTip>
                                <TextBlock
                                    TextAlignment="Left"
                                    Text="tags"
                                    >
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock 
                            Text="著者1, 著者2, 著者3, タイトルタイトルタイトルタイトルタイトルタイトルタイトルタイトル, 2022年度日本建築学会構造系論文集, 2023.4" 
                            Margin="50,0,0,0" 
                            TextWrapping="Wrap"
                            />
                    </Grid>

                    <Grid Margin="4">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button
                            Grid.Column="0"
                            Margin="3"
                            Style="{StaticResource ButtonTextStyle}"
                            Content="オンラインで情報を取得"
                            ToolTip="自動でオンラインからメタ情報をダウンロードして反映"
                            />

                        <Button
                            Grid.Column="1"
                            Margin="3"
                            Style="{StaticResource ButtonTextStyle}"
                            Content="PDFを表示"
                            ToolTip="PDFを表示。もしローカルに存在しない場合は，自動でダウンロードします。"
                            />

                        <Button
                            Grid.Column="2"
                            Margin="3"
                            Style="{StaticResource ButtonTextStyle}"
                            Content="Webサイトを表示"
                            ToolTip="元データのWebサイトをブラウザで表示します。"
                            />

                    </Grid>

                    <Grid Margin="4">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button
                            Grid.Column="0"
                            Margin="3"
                            Style="{StaticResource ButtonTextStyle}"
                            Content="（）"
                            ToolTip=""
                            />

                        <Button
                            Grid.Column="1"
                            Margin="3"
                            Style="{StaticResource ButtonTextStyle}"
                            Content="（PDF手動追加）"
                            ToolTip="PDFをデータベースに手動で追加します。"
                            />

                        <Button
                            Grid.Column="2"
                            Margin="3"
                            Style="{StaticResource ButtonTextStyle}"
                            Content="（AIにまとめてもらう）"
                            ToolTip="AIに論文を読んでもらって，まとめ文章を作成してもらいます。"
                            />

                    </Grid>

                </StackPanel>

            </ScrollViewer>

            <StackPanel Grid.Row="1" Margin="4">

                <Grid Margin="4">
                    <TextBlock
                        Text="ℹ️ 通知：" 
                        Width="50" 
                        HorizontalAlignment="Left"
                        TextAlignment="Right"
                        ToolTipService.InitialShowDelay="10" 
                        />
                    <TextBlock
                        Margin="50,0,0,0" 
                        Text="{Binding InfoMessage}" 
                        TextWrapping="NoWrap"
                        />
                </Grid>

            </StackPanel>

        </Grid>

    </Grid>
</Window>
