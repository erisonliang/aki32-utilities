<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Aki32Utilities.WPFAppUtilities.NodeController.Converters"
                    xmlns:local="clr-namespace:Aki32Utilities.WPFAppUtilities.NodeController.Controls">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibility"/>

    <Style TargetType="{x:Type local:NodeOutputContent}">
        <Setter Property="StrokeThickness" Value="2"/>
        <Setter Property="Stroke" Value="Gray"/>
        <Setter Property="Fill" Value="#FF080808"/>
        <Setter Property="MinWidth" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type local:NodeOutput}}}"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="CanConnect" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Stroke" Value="Aqua"/>
            </MultiTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Fill" Value="#55888888"/>
                <Setter Property="Stroke" Value="#55888888"/>
            </Trigger>

            <Trigger Property="IsConnected" Value="True">
                <Setter Property="Fill" Value="WhiteSmoke"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate
        x:Key="__NodeOutputContentTemplate__"
        TargetType="{x:Type local:NodeOutputContent}"
        >
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            >
            <DockPanel>
                <Label 
                    Content="{TemplateBinding Content}" 
                    Foreground="WhiteSmoke"
                    VerticalAlignment="Center" 
                    VerticalContentAlignment="Center" 
                    Padding="{TemplateBinding Padding}"
                    />
                <DockPanel
                    x:Name="__OutputConnector__"
                    Background="#00FFFFFF"
                    DockPanel.Dock="Right"
                    Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:NodeOutputContent}}}"                           
                    Visibility="{TemplateBinding CanConnect, Converter={StaticResource BooleanToVisibilityConverter}}"
                    ToolTip="{TemplateBinding ToolTip}"
                    ToolTipService.InitialShowDelay="10"
                    ToolTipService.Placement="Right"
                    >
                    <Grid
                        Width="{x:Static local:ControlSize.ConnectorSize}"
                        >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Ellipse 
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            x:Name="ConnectorShape1"
                            Width="{x:Static local:ControlSize.ConnectorSize}"
                            Height="{x:Static local:ControlSize.ConnectorSize}"
                            StrokeThickness="{TemplateBinding StrokeThickness}"
                            Stroke="{TemplateBinding Stroke}"
                            Fill="{TemplateBinding Fill}"
                            IsHitTestVisible="False"
                            />
                    </Grid>

                </DockPanel>
                <DockPanel
                    HorizontalAlignment="Center"
                    DockPanel.Dock="Right"
                    >
                    <ContentPresenter
                        VerticalAlignment="Center"
                        IsHitTestVisible="False"
                        Width="{Binding ActualWidth, ElementName=__OutputConnector__}"
                        Visibility="{TemplateBinding CanConnect, Converter={StaticResource InverseBooleanToVisibility}}"
                        >
                        <ContentPresenter.Content>
                            <Path 
                                Margin="0,0,-30,0" 
                                Fill="Transparent"
                                Stroke="Red"
                                StrokeThickness="2"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"
                                Data="M 0,0 L 20,0 L 20,20 L 0,20 Z M 0,0 L 0,0 L 20,20"
                                />
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </DockPanel>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=__OutputConnector__}" Value="True">
                <Setter Property="Fill" Value="DarkCyan" TargetName="ConnectorShape1"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:NodeOutput}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NodeOutput}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <Canvas x:Name="__NodeOutputCanvas__"/>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>